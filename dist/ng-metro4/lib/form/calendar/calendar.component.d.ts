import { ControlBase } from '../control-base';
import * as moment from 'moment';
import { CalendarButtonType, WidePointType } from '../../helper/types';
export declare class CalendarComponent extends ControlBase<moment.Moment | moment.Moment[]> {
    yearsBefore: number;
    yearsAfter: number;
    show: moment.Moment;
    pickerMode: boolean;
    locale: string;
    weekStart: 0 | 1;
    outside: boolean;
    buttons: CalendarButtonType[];
    ripple: boolean;
    rippleColor: string;
    exclude: moment.Moment[];
    include: moment.Moment[];
    minDate: moment.Moment;
    maxDate: moment.Moment;
    weekDayClick: boolean;
    multiSelect: boolean;
    showHeader: boolean;
    showFooter: boolean;
    widePoint: WidePointType;
    wide: boolean;
    clsToday: string;
    clsSelected: string;
    clsExclude: string;
    clsCancelButton: string;
    clsTodayButton: string;
    clsClearButton: string;
    clsDoneButton: string;
    clsCalendar: string;
    clsCalendarHeader: string;
    clsCalendarContent: string;
    clsCalendarFooter: string;
    clsCalendarMonths: string;
    clsCalendarYears: string;
    private object;
    private calendar;
    private clonedElement;
    createControl(): Promise<void>;
    disable(disabled: boolean): void;
    newValue(): void;
    convertMomentArray(arr: moment.Moment[]): string;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
}
