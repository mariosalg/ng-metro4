import { ControlBase } from '../control-base';
import * as moment from 'moment';
import { WidePointType } from '../../helper/types';
export declare class CalendarPickerComponent extends ControlBase<moment.Moment> {
    calendarWide: boolean;
    calendarWidePoint: WidePointType;
    dialogMode: boolean;
    dialogPoint: number;
    dialogOverlay: boolean;
    overlayColor: string;
    overlayAlpha: number;
    locale: string;
    size: string;
    format: string;
    clearButton: boolean;
    clearButtonIcon: string;
    calendarButtonIcon: string;
    yearsBefore: number;
    yearsAfter: number;
    weekStart: 0 | 1;
    outside: boolean;
    ripple: boolean;
    rippleColor: string;
    exclude: moment.Moment[];
    include: moment.Moment[];
    minDate: moment.Moment;
    maxDate: moment.Moment;
    showHeader: boolean;
    clsPicker: string;
    clsToday: string;
    clsSelected: string;
    clsExclude: string;
    clsCalendar: string;
    clsCalendarHeader: string;
    clsCalendarContent: string;
    clsCalendarMonths: string;
    clsCalendarYears: string;
    private input;
    private calendarPicker;
    private clonedElement;
    createControl(): Promise<void>;
    disable(disabled: boolean): void;
    newValue(): void;
    convertMomentArray(arr: moment.Moment[]): string;
    newClassValue(newClasses: string[], oldClasses: string[]): void;
}
